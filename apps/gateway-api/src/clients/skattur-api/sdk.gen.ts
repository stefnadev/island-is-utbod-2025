// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { AppControllerGetDataData, GetTaxReportsData, GetTaxReportsResponse, CreateTaxReportData, CreateTaxReportResponse, UpdateTaxReportData, UpdateTaxReportResponse, DeleteTaxReportData, DeleteTaxReportResponse, ViewTaxReportData, ViewTaxReportResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const appControllerGetData = <ThrowOnError extends boolean = false>(options?: Options<AppControllerGetDataData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<unknown, unknown, ThrowOnError>({
        url: '/',
        ...options
    });
};

/**
 * Get tax reports
 */
export const getTaxReports = <ThrowOnError extends boolean = false>(options?: Options<GetTaxReportsData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetTaxReportsResponse, unknown, ThrowOnError>({
        url: '/tax-reports',
        ...options
    });
};

/**
 * Create tax report
 */
export const createTaxReport = <ThrowOnError extends boolean = false>(options: Options<CreateTaxReportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<CreateTaxReportResponse, unknown, ThrowOnError>({
        url: '/tax-reports',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Update tax report
 */
export const updateTaxReport = <ThrowOnError extends boolean = false>(options: Options<UpdateTaxReportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<UpdateTaxReportResponse, unknown, ThrowOnError>({
        url: '/tax-reports',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Delete tax report
 */
export const deleteTaxReport = <ThrowOnError extends boolean = false>(options: Options<DeleteTaxReportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteTaxReportResponse, unknown, ThrowOnError>({
        url: '/tax-reports/{id}',
        ...options
    });
};

/**
 * View tax report
 */
export const viewTaxReport = <ThrowOnError extends boolean = false>(options: Options<ViewTaxReportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<ViewTaxReportResponse, unknown, ThrowOnError>({
        url: '/tax-reports/{id}',
        ...options
    });
};